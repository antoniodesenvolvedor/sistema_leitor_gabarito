/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import classes.Banco;
import classes.Correcao;
import classes.Gabarito;
import classes.Prova;
import java.awt.Cursor;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author aaaaaaaaaaaaaaaaaaaa
 */
public class TelaProvas extends javax.swing.JFrame {

    private ArrayList <Prova> listaProvas;
    private TableRowSorter <TableModel> tableSorter ;
    private boolean alterar;
    
    private TelaCorrecoes telaCorrecoes;
    
    public TelaProvas() {
        initComponents();
        
        listaProvas = Prova.carregarLista();
        carregarTable(jTablePesquisa);
        addValueChanged(jTablePesquisa);       
        tableSorter = new TableRowSorter<>(jTablePesquisa.getModel());
	jTablePesquisa.setRowSorter(tableSorter);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldDataCriacao = new javax.swing.JTextField();
        jTextFieldDisciplina = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldQuantidadeCorrecoes = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldQuantidadeQuestoes = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePesquisa = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButtonEditarGabarito = new javax.swing.JButton();
        jButtonCorrigirProva = new javax.swing.JButton();
        jButtonRevisarCorrecoes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Provas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel1.setText("Código");

        jLabel2.setText("Quantidade Questões");

        jLabel3.setText("Data Criacao");

        jTextFieldCodigo.setEnabled(false);

        jTextFieldDataCriacao.setEnabled(false);

        jTextFieldDisciplina.setEnabled(false);

        jLabel9.setText("Quantidade Correções");

        jTextFieldQuantidadeCorrecoes.setEnabled(false);

        jLabel4.setText("Disciplina");

        jTextFieldQuantidadeQuestoes.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDataCriacao, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQuantidadeCorrecoes, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldQuantidadeQuestoes, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextFieldQuantidadeCorrecoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDataCriacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldQuantidadeQuestoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("Alterar");
        jButtonAlterar.setEnabled(false);
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.setEnabled(false);
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jLabel5.setText("Pesquisar");

        jTextFieldPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPesquisarKeyReleased(evt);
            }
        });

        jTablePesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Data Criação", "Disciplina"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTablePesquisa);
        if (jTablePesquisa.getColumnModel().getColumnCount() > 0) {
            jTablePesquisa.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTablePesquisa.getColumnModel().getColumn(2).setPreferredWidth(120);
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Ações Prova"));

        jButtonEditarGabarito.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButtonEditarGabarito.setText("Escanear Gabarito Modelo");
        jButtonEditarGabarito.setEnabled(false);
        jButtonEditarGabarito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarGabaritoActionPerformed(evt);
            }
        });

        jButtonCorrigirProva.setText("Escanear Gabaritos Alunos");
        jButtonCorrigirProva.setEnabled(false);
        jButtonCorrigirProva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCorrigirProvaActionPerformed(evt);
            }
        });

        jButtonRevisarCorrecoes.setText("Revisar Correções");
        jButtonRevisarCorrecoes.setEnabled(false);
        jButtonRevisarCorrecoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRevisarCorrecoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonEditarGabarito, javax.swing.GroupLayout.PREFERRED_SIZE, 140, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRevisarCorrecoes, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonCorrigirProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonEditarGabarito, jButtonRevisarCorrecoes});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEditarGabarito)
                    .addComponent(jButtonRevisarCorrecoes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCorrigirProva)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButtonAlterar, jButtonCancelar, jButtonExcluir, jButtonLimpar, jButtonNovo, jButtonSalvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSalvar)
                            .addComponent(jButtonAlterar)
                            .addComponent(jButtonExcluir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonNovo)
                            .addComponent(jButtonCancelar)
                            .addComponent(jButtonLimpar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonAlterar, jButtonCancelar, jButtonExcluir, jButtonLimpar, jButtonNovo, jButtonSalvar});

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        limparComponents();
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        setComponents(true,false);
        limparComponents();
        jTablePesquisa.clearSelection();
        alterar = false;
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        Prova prova = new Prova();
        prova.setDisciplina( jTextFieldDisciplina.getText() );
             
        
        if(alterar){
           int indexTable = jTablePesquisa.getSelectedRow();
           if(indexTable == -1){
               return;
           }
           indexTable = tableSorter.convertRowIndexToModel(indexTable);
            
           prova.setCodigo( listaProvas.get( indexTable ).getCodigo() );
           boolean exito = prova.alterar();
            if(exito){
              JOptionPane.showMessageDialog(null,"Prova " + prova.getCodigo() + " alterada com sucesso");
            }
            else{
                JOptionPane.showMessageDialog(null,"Não foi possível realizar a alteração,"
                        + " verifique se todos os campos foram preenchidos corretamente\n");
                return;
            } 
            
        }
        else{    
            prova.setDataAgora();
            boolean exito = prova.salvar();
            if(exito){
              JOptionPane.showMessageDialog(null,"Prova " + prova.getDisciplina() + " salva com sucesso");  
            }
            else{
                JOptionPane.showMessageDialog(null,"Não foi possível salvar os dados,"
                        + " verifique se todos os campos foram preenchidos corretamente\n");

                return;
            }
        }
        
        listaProvas = Prova.carregarLista();
        carregarTable(jTablePesquisa);
        setComponents(false,false);
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        setComponents(true,false);
        alterar = true;
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        setComponents(false,false);
        limparComponents();
        jTablePesquisa.clearSelection();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
       int index = jTablePesquisa.getSelectedRow();    
       if(index == -1){
           return;
       }
       index = tableSorter.convertRowIndexToModel(index);
       
       int opcao;       
        Object[]botoes = {"Sim", "Não"};
        opcao = JOptionPane.showOptionDialog(null,
                "Deseja mesmo excluir o cadastro " + listaProvas.get(index).getCodigo(), "Fechar",
                JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,
                null,botoes,botoes[0]);
        if(opcao == JOptionPane.NO_OPTION){
            return;
        }

       boolean exito = listaProvas.get(index).excluir();
       if(exito){
           listaProvas = Prova.carregarLista();
           jTablePesquisa.clearSelection();
           limparComponents();
           carregarTable(jTablePesquisa);
           setComponents(false,false);
           JOptionPane.showMessageDialog(null,"Exclusão realizada com sucesso");
       }
       else{
           JOptionPane.showMessageDialog(null,"Não foi possível realizar a exclusão");
       }
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTextFieldPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarKeyReleased
        String text = jTextFieldPesquisar.getText();	
        if(text.trim().length() != 0)
        {
            tableSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));    
        }
        else{
            tableSorter.setRowFilter(null);
        }
    }//GEN-LAST:event_jTextFieldPesquisarKeyReleased

    private void jButtonEditarGabaritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarGabaritoActionPerformed
       int index = jTablePesquisa.getSelectedRow();    
       if(index == -1){
           return;
       }
       index = tableSorter.convertRowIndexToModel(index);
              
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        
        int result = fileChooser.showOpenDialog( this );
        
        if( result == JFileChooser.CANCEL_OPTION){
            return;
        }
        
        String arquivo = fileChooser.getSelectedFile().toString();
        int quantidadeQuestoes = 0;
        
        while(true){
            try{
                String qtd = JOptionPane.showInputDialog(null,"Digite a quantidade de questões entre 1 e 90");
                if(qtd == null){
                    return;
                }
                
                
                quantidadeQuestoes = Integer.parseInt(qtd);
                if(quantidadeQuestoes >= 1 && quantidadeQuestoes <= 90){
                    break;         
                }
                
                
                JOptionPane.showMessageDialog(null,"Número Inválido");

            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null,"Número Inválido");
            }  
        }
        
        jTextFieldQuantidadeQuestoes.setText("" + quantidadeQuestoes);
        
        // cursor de espera
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        
        Gabarito gabarito = new Gabarito();
        gabarito.ler(arquivo);
        
        String questoes = "";
        
        for(int i = 0; i < quantidadeQuestoes; i++){
            questoes += "Questão " + (i+1) +":" + gabarito.getQuestoes(i) + "   ";
            if((i+1) % 5 == 0){
                questoes += "\n";
            }
        }
        
        int opcao;       
        Object[]botoes = {"Sim", "Não"};
        opcao = JOptionPane.showOptionDialog(null,
                "Salvar Gabarito?\n " + questoes , "Fechar",
                JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,
                null,botoes,botoes[0]);
        if(opcao == JOptionPane.NO_OPTION){
            setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            return;
        }
        
        // carregando as questões no respectivo objeto Prova da lista
        listaProvas.get(index).limparQuestoes();
        for(int i = 0; i < quantidadeQuestoes; i++){
           listaProvas.get(index).setQuestao(gabarito.getQuestoes(i));
        }
        
        listaProvas.get(index).salvarGabarito();
        // cursor de espera
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
     
    }//GEN-LAST:event_jButtonEditarGabaritoActionPerformed

    private void jButtonCorrigirProvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCorrigirProvaActionPerformed
       
        
       int quantidadeQuestoes = Integer.parseInt(jTextFieldQuantidadeQuestoes.getText());
       if(quantidadeQuestoes == 0){
            JOptionPane.showMessageDialog(null, "Por Favor escaneie um gabarito modelo primeiro");
            return;
        } 
        
        
       int index = jTablePesquisa.getSelectedRow();    
       if(index == -1){
           return;
       }
       index = tableSorter.convertRowIndexToModel(index);
       
       

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setMultiSelectionEnabled(true);
        int result = fileChooser.showOpenDialog( this );
        
        if( result == JFileChooser.CANCEL_OPTION){
            return;
        }
        
        File arquivo[] = fileChooser.getSelectedFiles();
        

        
        
        
        // cursor de espera
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        
        for(int i = 0; i < arquivo.length; i++){
           Gabarito gabarito = new Gabarito();
           boolean leu = gabarito.ler(arquivo[i].toString()); 
           if(leu){
               Correcao correcao = new Correcao();
               for(int j = 0; j < quantidadeQuestoes; j++){
                 correcao.setQuestao(gabarito.getQuestoes(j));  
               }
               correcao.setMatriculaAluno(gabarito.getRa());
               correcao.setDataAgora();
               correcao.setCodigoProva("" + listaProvas.get(index).getCodigo());
               
               
               boolean salvou = correcao.salvar(); 
               if(!salvou){
                   JOptionPane.showMessageDialog(null, "Não foi possível salvar a correção RA: " + correcao.getMatriculaAluno());
               }
               
           }
           
        }
        
        try {
            String sql = "SELECT COUNT(*) FROM correcao WHERE codigo_prova = ?";
            PreparedStatement pst = Banco.conexao.prepareStatement(sql);
            pst.setInt(1, listaProvas.get(index).getCodigo());
            ResultSet rs = pst.executeQuery();
            pst.clearParameters();
            rs.next();
            jTextFieldQuantidadeCorrecoes.setText(rs.getString("COUNT(*)"));
        } catch (SQLException e) {
            System.out.println(e);
        }
        // cursor de espera
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        
    }//GEN-LAST:event_jButtonCorrigirProvaActionPerformed

    private void jButtonRevisarCorrecoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRevisarCorrecoesActionPerformed
       if( jTextFieldQuantidadeCorrecoes.equals("0")){
          JOptionPane.showMessageDialog(null, "Nenhuma correção feita");
          return; 
       }
       
       if (jTextFieldQuantidadeQuestoes.getText().equals("0")){
           JOptionPane.showMessageDialog(null, "Por favor escaneie um gabarito modelo primeiro");
           return;
       }
        
       int index = jTablePesquisa.getSelectedRow();    
       if(index == -1){
           return;
       }
       index = tableSorter.convertRowIndexToModel(index);
       Prova prova = listaProvas.get(index);
       
       if(jTextFieldQuantidadeCorrecoes.getText().equals("0")){
           JOptionPane.showMessageDialog(null, "Nenhuma correção realizada");
           return;
       }
       
        telaCorrecoes = new TelaCorrecoes(prova);
        telaCorrecoes.setVisible(true);

           
       
       
    }//GEN-LAST:event_jButtonRevisarCorrecoesActionPerformed

    
    
    private void addValueChanged(JTable jTable){
       
       // classe interna anônima
        jTable.getSelectionModel().addListSelectionListener(
            new javax.swing.event.ListSelectionListener() {               
                @Override
                public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                    
                    // preventing from double events
                    if(!evt.getValueIsAdjusting() ){
                        int index = jTablePesquisa.getSelectedRow();
                        if(index == -1){
                            return;
                        }    
                        index = tableSorter.convertRowIndexToModel(index);
                        
                        jTextFieldDisciplina.setText(listaProvas.get(index).getDisciplina());   
                        jTextFieldCodigo.setText("" + listaProvas.get(index).getCodigo());
                        
                        jTextFieldDataCriacao.setText(listaProvas.get(index).getDiaCriacao() +"/"+
                            listaProvas.get(index).getMesCriacao() + "/" +
                            listaProvas.get(index).getAnoCriacao());
                        jTextFieldQuantidadeQuestoes.setText(""+listaProvas.get(index).getQuantidadeQuestoes());
                                               
                        setComponents(false,true);
                        
                        try{
                            String sql = "SELECT COUNT(*) FROM correcao WHERE codigo_prova = ?";
                            PreparedStatement pst = Banco.conexao.prepareStatement(sql);
                            pst.setInt(1,listaProvas.get(index).getCodigo());
                            ResultSet rs = pst.executeQuery();
                            pst.clearParameters();
                            rs.next();
                            jTextFieldQuantidadeCorrecoes.setText(rs.getString("COUNT(*)"));                           
                        }
                        catch(SQLException e){
                            System.out.println(e);                      
                        }
                        
                        
                        
                    }
                    
                }
            }
        );     
    }
    
     private void limparComponents(){
        jTextFieldDisciplina.setText("");
        jTextFieldDataCriacao.setText("");
        jTextFieldCodigo.setText("");
        jTextFieldQuantidadeQuestoes.setText("");
        jTextFieldQuantidadeCorrecoes.setText("");
    }
     
    private void setComponents(boolean alterando, boolean alterar){
        
        jButtonNovo.setEnabled(!alterando);
        jButtonLimpar.setEnabled(alterando);
        jButtonSalvar.setEnabled(alterando);
        jButtonCancelar.setEnabled(alterando);
        
        jButtonExcluir.setEnabled(alterar);
        jButtonAlterar.setEnabled(alterar);
        jButtonEditarGabarito.setEnabled(alterar);
        jButtonCorrigirProva.setEnabled(alterar);
        jButtonRevisarCorrecoes.setEnabled(alterar);
 
        jTextFieldDisciplina.setEnabled(alterando);
    } 
    
    private void carregarTable(JTable jTable){

     

        if(listaProvas != null){
            
            int tamanho = listaProvas.size();
            String dadosProva[] = new String[3];
            DefaultTableModel model;         
            model = (DefaultTableModel) jTable.getModel();
            
            // limpando para evitar lixo ao atualizar a table
            int quantidadeLinhas = model.getRowCount();
            for(int i = 0; i < quantidadeLinhas; i++){
                model.removeRow(0);
            }
                                  
            for(int i = 0; i < tamanho; i++){
                dadosProva[0] = String.valueOf( listaProvas.get(i).getCodigo() );
                dadosProva[1] = listaProvas.get(i).getDiaCriacao() + "/" +
                        listaProvas.get(i).getMesCriacao() + "/" +
                        listaProvas.get(i).getAnoCriacao();
                dadosProva[2] = listaProvas.get(i).getDisciplina();
                model.addRow(dadosProva);
            }
            
            jTable.setModel( model );                       
        }      
    }
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProvas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCorrigirProva;
    private javax.swing.JButton jButtonEditarGabarito;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonRevisarCorrecoes;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePesquisa;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDataCriacao;
    private javax.swing.JTextField jTextFieldDisciplina;
    private javax.swing.JTextField jTextFieldPesquisar;
    private javax.swing.JTextField jTextFieldQuantidadeCorrecoes;
    private javax.swing.JTextField jTextFieldQuantidadeQuestoes;
    // End of variables declaration//GEN-END:variables
}
